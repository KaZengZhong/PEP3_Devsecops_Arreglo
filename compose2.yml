services:
  postgres:
    image: postgres:latest
    container_name: postgres-1
    environment:
      POSTGRES_DB: prestabanco
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5433:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - app-network

  backend:
    image: kahaozeng/prestabanco-backend:latest
    container_name: backend-1
    environment:
      DB_HOST: postgres
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/prestabanco
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
    ports:
      - "8090:8090"
    depends_on:
      - postgres
    networks:
      - app-network
    # Logging estructurado para que Filebeat lo capture
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=backend,application=prestabanco"

  frontend:
    image: kahaozeng/prestabanco-frontend:latest
    container_name: frontend-1
    ports:
      - "8070:80"
    depends_on:
      - backend
    networks:
      - app-network
    # Logging estructurado para que Filebeat lo capture
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=frontend,application=prestabanco"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - app-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - app-network

  # Filebeat configurado especÃ­ficamente para Docker Desktop en Windows
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: filebeat
    user: root
    networks:
      - app-network
    depends_on:
      - elasticsearch
    volumes:
      # Montar el socket de Docker para obtener metadatos
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Directorio donde Docker Desktop almacena logs en WSL2
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: |
      bash -c "
      cat > /usr/share/filebeat/filebeat.yml << 'EOF'
      filebeat.autodiscover:
        providers:
          - type: docker
            hints.enabled: true
            templates:
              - condition:
                  contains:
                    docker.container.labels.service: backend
                config:
                  - type: container
                    containers.ids:
                      - \${data.docker.container.id}
                    processors:
                      - add_fields:
                          fields:
                            service: backend
                            application: prestabanco
                            log_type: spring-boot
              - condition:
                  contains:
                    docker.container.labels.service: frontend
                config:
                  - type: container
                    containers.ids:
                      - \${data.docker.container.id}
                    processors:
                      - add_fields:
                          fields:
                            service: frontend
                            application: prestabanco
                            log_type: nginx

      # Fallback: capturar todos los logs de contenedores
      filebeat.inputs:
      - type: container
        paths:
          - '/var/lib/docker/containers/*/*.log'
        processors:
          - add_docker_metadata:
              host: 'unix:///var/run/docker.sock'
          - decode_json_fields:
              fields: ['message']
              target: ''
              overwrite_keys: true
          - add_fields:
              target: ''
              fields:
                application: prestabanco
                environment: development

      output.elasticsearch:
        hosts: ['elasticsearch:9200']
        index: 'prestabanco-logs-%{+yyyy.MM.dd}'

      setup.kibana:
        host: 'kibana:5601'

      setup.template:
        name: 'prestabanco'
        pattern: 'prestabanco-logs-*'
        settings:
          index:
            number_of_shards: 1
            number_of_replicas: 0

      setup.ilm:
        enabled: false

      logging.level: info
      logging.to_stderr: true
      EOF

      chmod 600 /usr/share/filebeat/filebeat.yml
      echo 'Iniciando Filebeat con configuraciÃ³n para Docker Desktop...'
      filebeat -e
      "

networks:
  app-network:
    driver: bridge

volumes:
  postgres:
    external: true
  elasticsearch_data:
    driver: local