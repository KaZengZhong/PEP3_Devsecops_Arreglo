version: '3.8'

services:
  # Frontend service
  frontend:
    image: kahaozeng/prestabanco-frontend:latest
    container_name: frontend-1
    ports:
      - "8070:80"
    depends_on:
      - backend
    networks:
      - app-network
    # Agregar logging driver para mejor captura
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend service
  backend:
    image: kahaozeng/prestabanco-backend:latest
    container_name: backend-1
    environment:
      DB_HOST: postgres
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/prestabanco
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
    ports:
      - "8090:8090"
    depends_on:
      - postgres
    networks:
      - app-network
    # Agregar logging driver
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # PostgreSQL 
  postgres:
    image: postgres:latest
    container_name: postgres-1
    environment:
      POSTGRES_DB: prestabanco
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "0.0.0.0:5433:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - app-network

  # Elasticsearch - Configuración simple
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch-1
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - app-network

  # Kibana - Dashboard web
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana-1
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - app-network

  # Logstash - Sin archivos de configuración externos
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: logstash-1
    ports:
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
    networks:
      - app-network
    command: >
      bash -c "
      echo 'input { 
        beats { port => 5044 }
      }
      filter {
        if [docker][container][name] {
          mutate { add_field => { \"container_name\" => \"%{[docker][container][name]}\" } }
        }
        if [message] {
          mutate { add_field => { \"log_message\" => \"%{[message]}\" } }
        }
        mutate { add_field => { \"application\" => \"prestabanco\" } }
      }
      output {
        elasticsearch {
          hosts => [\"elasticsearch:9200\"]
          index => \"prestabanco-logs-%{+YYYY.MM.dd}\"
        }
        stdout { codec => dots }
      }' > /usr/share/logstash/pipeline/logstash.conf &&
      /usr/local/bin/docker-entrypoint
      "

  # Filebeat - Configuración simplificada SIN errores YAML
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: filebeat-1
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat_data:/usr/share/filebeat/data
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - LOGSTASH_HOSTS=logstash:5044
    depends_on:
      - logstash
    networks:
      - app-network
    # Configuración más simple sin YAML complejo
    command: >
      sh -c "
      cat > /usr/share/filebeat/filebeat.yml <<EOF
      filebeat.inputs:
      - type: container
        paths:
          - '/var/lib/docker/containers/*/*.log'
        processors:
        - add_docker_metadata:
            host: 'unix:///var/run/docker.sock'

      output.logstash:
        hosts: ['logstash:5044']

      logging.level: info
      EOF
      && filebeat -e
      "

networks:
  app-network:
    driver: bridge

volumes:
  postgres:
    external: true
  elasticsearch_data:
    driver: local
  filebeat_data:
    driver: local