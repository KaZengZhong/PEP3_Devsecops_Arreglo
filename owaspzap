pipeline {
    agent any
    
    stages {
        stage('Setup') {
            steps {
                bat 'if exist dast-reports rmdir /s /q dast-reports'
                bat 'mkdir dast-reports'
            }
        }
        
        stage('Deploy App') {
            steps {
                bat 'docker-compose -f compose2.yml up -d'
                sleep(time: 60, unit: 'SECONDS')
            }
        }
        
        stage('ZAP Scan') {
            steps {
                script {
                    try {
                        bat 'docker run --rm -v "%cd%\\dast-reports:/zap/wrk" zaproxy/zap-stable zap-baseline.py -t http://localhost:8070 -J report.json -H report.html'
                        echo "ZAP scan completed"
                    } catch (Exception e) {
                        echo "ZAP scan attempted: ${e.message}"
                        bat 'echo ZAP scan attempted > dast-reports\\manual-report.txt'
                    }
                }
            }
        }
    }
    
    post {
        always {
            archiveArtifacts artifacts: "dast-reports/**/*", allowEmptyArchive: true
            bat 'docker-compose -f compose2.yml down || echo cleanup done'
        }
    }
}