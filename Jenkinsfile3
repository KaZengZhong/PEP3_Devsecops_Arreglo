pipeline {
    agent any
    
    environment {
        REPORTS_DIR = 'security-reports'
        TIMESTAMP = "${new Date().format('yyyyMMdd-HHmmss')}"
        COMPOSE_FILE = 'compose2.yml'
    }
    
    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }
        
        stage('Preparation') {
            steps {
                script {
                    // Crear directorio para reportes
                    bat "if not exist %REPORTS_DIR% mkdir %REPORTS_DIR%"
                    
                    echo "=== PIPELINE DE SEGURIDAD OWASP ZAP ==="
                    echo "🐳 Desplegando aplicaciones automáticamente"
                    echo "🕷️ Análisis dinámico completo con OWASP ZAP"
                }
            }
        }

        // ========== DESPLIEGUE AUTOMÁTICO ==========
        stage('Deploy Applications') {
            steps {
                script {
                    echo "🐳 Desplegando aplicaciones con Docker Compose..."
                    
                    // Limpiar contenedores anteriores
                    bat '''
                        docker-compose -f %COMPOSE_FILE% down --remove-orphans || echo "No previous containers to remove"
                    '''
                    
                    // Levantar servicios
                    bat '''
                        docker-compose -f %COMPOSE_FILE% up -d
                    '''
                    
                    echo "⏳ Esperando que los servicios estén listos..."
                }
            }
        }
        
        stage('Wait for Applications Ready') {
            steps {
                script {
                    echo "🔍 Verificando que las aplicaciones estén listas..."
                    
                    // Esperar que los containers estén running
                    bat '''
                        timeout 30 > nul
                        echo "Waiting for containers to be fully ready..."
                    '''
                    
                    // Verificar frontend
                    retry(5) {
                        bat '''
                            curl -f http://localhost:8070 || (echo "Frontend not ready, retrying..." && timeout 10 > nul && exit 1)
                        '''
                    }
                    
                    // Verificar backend
                    retry(5) {
                        bat '''
                            curl -f http://localhost:8090/actuator/health || (echo "Backend not ready, retrying..." && timeout 10 > nul && exit 1)
                        '''
                    }
                    
                    echo "✅ Todas las aplicaciones están listas para el escaneo"
                }
            }
        }

        // ========== OWASP ZAP SECURITY SCANS ==========
        stage('OWASP ZAP Baseline Scans') {
            parallel {
                stage('ZAP Baseline - Frontend') {
                    steps {
                        script {
                            echo "🕷️ OWASP ZAP - Baseline Scan Frontend..."
                            
                            bat '''
                                docker run --rm ^
                                    -v "%cd%\\%REPORTS_DIR%:/zap/wrk/:rw" ^
                                    --network host ^
                                    -t zaproxy/zap-stable ^
                                    zap-baseline.py ^
                                    -t http://localhost:8070 ^
                                    -J zap-frontend-baseline-%TIMESTAMP%.json ^
                                    -r zap-frontend-baseline-%TIMESTAMP%.html ^
                                    -x zap-frontend-baseline-%TIMESTAMP%.xml ^
                                    --auto
                                exit /b 0
                            '''
                        }
                    }
                }
                
                stage('ZAP Baseline - Backend') {
                    steps {
                        script {
                            echo "🕷️ OWASP ZAP - Baseline Scan Backend..."
                            
                            bat '''
                                docker run --rm ^
                                    -v "%cd%\\%REPORTS_DIR%:/zap/wrk/:rw" ^
                                    --network host ^
                                    -t zaproxy/zap-stable ^
                                    zap-baseline.py ^
                                    -t http://localhost:8090 ^
                                    -J zap-backend-baseline-%TIMESTAMP%.json ^
                                    -r zap-backend-baseline-%TIMESTAMP%.html ^
                                    -x zap-backend-baseline-%TIMESTAMP%.xml ^
                                    --auto
                                exit /b 0
                            '''
                        }
                    }
                }
            }
        }
        
        stage('OWASP ZAP API Scan') {
            steps {
                script {
                    echo "🕷️ OWASP ZAP - API Security Scan..."
                    
                    bat '''
                        docker run --rm ^
                            -v "%cd%\\%REPORTS_DIR%:/zap/wrk/:rw" ^
                            --network host ^
                            -t zaproxy/zap-stable ^
                            zap-api-scan.py ^
                            -t http://localhost:8090/v3/api-docs ^
                            -f openapi ^
                            -J zap-api-scan-%TIMESTAMP%.json ^
                            -r zap-api-scan-%TIMESTAMP%.html ^
                            -x zap-api-scan-%TIMESTAMP%.xml || echo "API scan completed"
                        exit /b 0
                    '''
                }
            }
        }

        // ========== OWASP ZAP FULL SCANS ==========
        stage('OWASP ZAP Full Scans') {
            parallel {
                stage('ZAP Full Scan - Frontend') {
                    steps {
                        script {
                            echo "🕷️ OWASP ZAP - Full Scan Frontend (análisis profundo)..."
                            
                            bat '''
                                docker run --rm ^
                                    -v "%cd%\\%REPORTS_DIR%:/zap/wrk/:rw" ^
                                    --network host ^
                                    -t zaproxy/zap-stable ^
                                    zap-full-scan.py ^
                                    -t http://localhost:8070 ^
                                    -J zap-full-frontend-%TIMESTAMP%.json ^
                                    -r zap-full-frontend-%TIMESTAMP%.html ^
                                    -x zap-full-frontend-%TIMESTAMP%.xml ^
                                    --auto
                                exit /b 0
                            '''
                        }
                    }
                }
                
                stage('ZAP Full Scan - Backend') {
                    steps {
                        script {
                            echo "🕷️ OWASP ZAP - Full Scan Backend (análisis profundo)..."
                            
                            bat '''
                                docker run --rm ^
                                    -v "%cd%\\%REPORTS_DIR%:/zap/wrk/:rw" ^
                                    --network host ^
                                    -t zaproxy/zap-stable ^
                                    zap-full-scan.py ^
                                    -t http://localhost:8090 ^
                                    -J zap-full-backend-%TIMESTAMP%.json ^
                                    -r zap-full-backend-%TIMESTAMP%.html ^
                                    -x zap-full-backend-%TIMESTAMP%.xml ^
                                    --auto
                                exit /b 0
                            '''
                        }
                    }
                }
            }
        }

        // ========== ANÁLISIS DE RESULTADOS ==========
        stage('Security Analysis & Reports') {
            steps {
                script {
                    echo "📊 Generando análisis consolidado de vulnerabilidades..."
                    
                    // Listar todos los reportes
                    bat "dir %REPORTS_DIR%"
                    
                    // Crear resumen de seguridad OWASP ZAP
                    bat '''
                        echo === RESUMEN DE SEGURIDAD OWASP ZAP === > "%REPORTS_DIR%/zap-security-summary-%TIMESTAMP%.txt"
                        echo Fecha: %DATE% %TIME% >> "%REPORTS_DIR%/zap-security-summary-%TIMESTAMP%.txt"
                        echo Pipeline: Docker Compose + OWASP ZAP >> "%REPORTS_DIR%/zap-security-summary-%TIMESTAMP%.txt"
                        echo. >> "%REPORTS_DIR%/zap-security-summary-%TIMESTAMP%.txt"
                        echo Scans ejecutados: >> "%REPORTS_DIR%/zap-security-summary-%TIMESTAMP%.txt"
                        echo - ZAP Baseline Frontend >> "%REPORTS_DIR%/zap-security-summary-%TIMESTAMP%.txt"
                        echo - ZAP Baseline Backend >> "%REPORTS_DIR%/zap-security-summary-%TIMESTAMP%.txt"
                        echo - ZAP API Scan Backend >> "%REPORTS_DIR%/zap-security-summary-%TIMESTAMP%.txt"
                        echo - ZAP Full Scan Frontend >> "%REPORTS_DIR%/zap-security-summary-%TIMESTAMP%.txt"
                        echo - ZAP Full Scan Backend >> "%REPORTS_DIR%/zap-security-summary-%TIMESTAMP%.txt"
                        echo. >> "%REPORTS_DIR%/zap-security-summary-%TIMESTAMP%.txt"
                        echo Reportes generados: >> "%REPORTS_DIR%/zap-security-summary-%TIMESTAMP%.txt"
                        dir /b "%REPORTS_DIR%" >> "%REPORTS_DIR%/zap-security-summary-%TIMESTAMP%.txt"
                    '''
                    
                    echo "✅ Análisis completo de seguridad OWASP ZAP finalizado"
                    echo "📊 Tipos de reportes: JSON, HTML, XML"
                    echo "🔍 Vulnerabilidades detectadas en aplicaciones web"
                }
            }
        }
    }
    
    post {
        always {
            script {
                echo "🧹 Limpiando recursos..."
                
                // Bajar containers
                bat '''
                    docker-compose -f %COMPOSE_FILE% down --remove-orphans || echo "Cleanup completed"
                '''
                
                echo "📁 Archivando reportes de seguridad OWASP ZAP..."
                archiveArtifacts artifacts: "${REPORTS_DIR}/**/*", allowEmptyArchive: true
                
                echo "🎯 PIPELINE OWASP ZAP COMPLETADO"
                echo "📊 Reportes disponibles en Jenkins artifacts"
                echo "🕷️ Análisis dinámico de seguridad web completo"
            }
        }
        
        success {
            echo "✅ Pipeline OWASP ZAP ejecutado exitosamente"
            echo "🔍 Revisa los reportes HTML para ver vulnerabilidades detalladas"
        }
        
        failure {
            echo "❌ Pipeline falló - revisar logs para detalles"
            echo "💡 Tip: Las aplicaciones deben estar disponibles para el escaneo"
        }
    }
}